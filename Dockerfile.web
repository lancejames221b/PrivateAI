# Use an official Python runtime as a parent image
FROM python:3.10-slim

# Set the working directory in the container
WORKDIR /app

# Copy the requirements file into the container
COPY requirements.txt requirements.txt

# Install any needed packages specified in requirements.txt
# Use --no-cache-dir to reduce image size
# Install system dependencies needed for some Python packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/* \
    && pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application code into the container
COPY . .

# Make port 7070 available to the world outside this container
EXPOSE 7070

# Define environment variables
ENV FLASK_APP=app.py
ENV FLASK_RUN_HOST=0.0.0.0
ENV FLASK_RUN_PORT=7070
ENV PYTHONUNBUFFERED=1
ENV DOCKER_CONTAINER=true
# Set proxy service name for Docker networking
ENV PROXY_HOST=proxy
ENV PROXY_PORT=8080

# Run the Flask app when the container launches
CMD ["flask", "run"] 