name: Deploy

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'staging' }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}/private-ai-proxy
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=ref,event=branch
          type=sha,format=short
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push Proxy Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: Dockerfile.proxy
        push: true
        tags: ghcr.io/${{ github.repository }}/private-ai-proxy-only:${{ steps.meta.outputs.version }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    # For staging environment
    - name: Deploy to staging
      if: ${{ github.event.inputs.environment == 'staging' || github.event.inputs.environment == null }}
      run: |
        echo "Deploying to staging environment"
        # Add your staging deployment commands here
        # For example, using SSH to deploy to a staging server
        # ssh user@staging-server "docker pull ghcr.io/${{ github.repository }}/private-ai-proxy:${{ steps.meta.outputs.version }} && docker-compose up -d"
    
    # For production environment
    - name: Deploy to production
      if: ${{ github.event.inputs.environment == 'production' }}
      run: |
        echo "Deploying to production environment"
        # Add your production deployment commands here
        # For example, using SSH to deploy to a production server
        # ssh user@production-server "docker pull ghcr.io/${{ github.repository }}/private-ai-proxy:${{ steps.meta.outputs.version }} && docker-compose -f docker-compose.production.yml up -d"