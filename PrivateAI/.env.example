# Example environment configuration for AI Security Proxy
# Copy this file to .env and modify as needed

# Flask secret key (used for session management)
# Generate a new one with: python -c 'import secrets; print(secrets.token_hex(16))'
SECRET_KEY=your_secret_key_here

# Flask configuration
FLASK_APP=app.py
FLASK_ENV=production  # Change to 'development' for debug mode

# Proxy settings
PROXY_PORT=8080
PROXY_MODE=standalone  # Options: standalone, mitm

# Security settings
BLOCK_ALL_DOMAINS=false
ENCRYPT_DATABASE=true
ENCRYPTION_KEY=  # Auto-generated if empty

# Logging
LOG_LEVEL=info  # Options: debug, info, warning, error, critical
LOG_FILE=proxy.log

# For mitmproxy integration
CUSTOM_AI_DOMAINS=companydomain.internal,dev.myproject.com
USE_PRESIDIO=true  # Set to false for lightweight deployment without Presidio

# Certificate settings (for mitmproxy)
CERT_DIR=~/.mitmproxy

# For standalone HTTP-only proxy (no HTTPS support)
HTTP_ONLY=false

# Advanced settings
TRANSFORMATION_BATCH_SIZE=1000  # Maximum number of items to process at once
MAX_CACHE_SIZE=10000            # Maximum number of cached transformations
CACHE_EXPIRY_SECONDS=3600       # Cache expiry time in seconds

# Presidio settings
PRESIDIO_LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR
SPACY_MODEL=en_core_web_lg  # Language model for Presidio

# AI Inference Protection
ENABLE_AI_INFERENCE_PROTECTION=true  # Set to false to disable inference protection
INFERENCE_PROTECTION_LEVEL=high  # low, medium, high - controls sensitivity

# Web UI Authentication (Only used if BASIC_AUTH_ENABLED=true)
BASIC_AUTH_ENABLED=true  # Enable basic authentication for the web UI
BASIC_AUTH_USERNAME=admin  # Username for basic authentication
BASIC_AUTH_PASSWORD=change_this_password  # Password for basic authentication 